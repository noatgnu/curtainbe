name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Compose
      run: sudo apt-get install docker-compose

    - name: Create .env file
      run: |
        echo "POSTGRES_NAME=test_db" >> .env
        echo "POSTGRES_DB=test_db" >> .env
        echo "POSTGRES_USER=test_user" >> .env
        echo "POSTGRES_PASSWORD=test_password" >> .env
        echo "SECRET_KEY=django-insecure-b1h!t91!w^5#4k8k4a8%*&kk8%s#5kxc)t=d7=hwnv1cqwg0se" >> .env
        echo "DJANGO_ALLOWED_HOSTS=localhost" >> .env
        echo "REDIS_PASSWORD=test_redis_password" >> .env
        echo "REDIS_PORT=6379" >> .env
        echo "REDIS_DB=0" >> .env
        echo "DJANGO_CORS_WHITELIST=http://localhost:8000" >> .env

    - name: Build and start containers
      run: docker-compose -f docker-compose.public.yml up -d

    - name: Wait for DB to be ready
      run: sleep 30

    - name: Apply migrations
      run: docker-compose -f docker-compose.public.yml exec -T web python manage.py migrate

    - name: Create superuser
      run: |
        echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('admin', 'admin@example.com', 'password')" | docker-compose -f docker-compose.public.yml exec -T web python manage.py shell

    - name: Run tests
      run: docker-compose -f docker-compose.public.yml exec -T web python manage.py test

    - name: Tear down
      run: docker-compose -f docker-compose.public.yml down
